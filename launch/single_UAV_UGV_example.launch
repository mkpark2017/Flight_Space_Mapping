<?xml version="1.0"?>
<launch>

  <arg name="mav_name" default="firefly"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find flight_space_mapping)/worlds/grass_houses_graywall.world" />
  </include>
<!--
  <group ns="husky_1">
    <include file="$(find husky_gazebo)/launch/spawn_husky_tf.launch">
      <arg name="robot_ns" value="husky_1" />
      <arg name="tf_pre" value="husky1_tf" />
      <arg name="laser_enabled" value="true" />
    </include>
  </group>
-->
  <group ns="$(arg mav_name)1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_velodyne.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)1"/>
      <arg name="x" value="-15.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-15 0 10 0 2"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>



  <node pkg="wind_visualization" name="wind_visual" type="wind_visual_node">
    <remap from="/firefly/ground_truth/pose" to="/firefly1/ground_truth/pose" />
    <remap from="/wind_data" to="/firefly1/wind_data" />
  </node>

  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <param name="resolution" value="0.1" />

    <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
    <param name="frame_id" type="string" value="world" />
	
    <!-- maximum range to integrate (speedup!) -->
    <param name="sensor_model/max_range" value="-1" />

    <param name="pointcloud_min_z" value="0" />

    <!-- data source to integrate (PointCloud2) -->
    <remap from="cloud_in" to="/firefly1/velodyne_points" />
	
  </node>

  <include file="$(find flight_space_mapping)/launch/abstract_map.launch" />

  <node pkg="flight_space_mapping" type="ugv_objects_map" name="ugv_objects_map" />
<!--
  <node pkg="hector_trajectory_server" name="trajectory" type="hector_trajectory_server">
    <param name="target_frame_name" value="world" />
    <param name="source_frame_name" value="firefly1/base_link" />
  </node>
-->

</launch>
